# Docker-based Makefile for pg_mock_time extension
# This is the main Makefile to use for development and testing

.PHONY: all build test clean shell logs help

# Default target
all: build

help:
	@echo "pg_mock_time Extension - Make Targets"
	@echo "======================================"
	@echo "  make build       - Build the Docker image with the extension"
	@echo "  make test        - Run the test suite"
	@echo "  make up          - Start the PostgreSQL container"
	@echo "  make down        - Stop and remove the container"
	@echo "  make restart     - Restart the container"
	@echo "  make shell       - Open psql shell in container"
	@echo "  make bash        - Open bash shell in container"
	@echo "  make logs        - Show container logs"
	@echo "  make clean       - Clean up containers and images"
	@echo "  make status      - Check extension status"
	@echo ""

# Build the Docker image
build:
	@echo "Building Docker image with pg_mock_time extension..."
	@docker-compose build

# Run tests
test: up
	@echo "Running test suite..."
	@./test_extension.sh

# Quick test without full suite
quick-test: up
	@echo "Running quick test..."
	@docker exec pg-mock-time psql -U postgres -c "CREATE EXTENSION IF NOT EXISTS pg_mock_time; SELECT pg_mock_time_status();"

# Container management
up: build
	@echo "Starting PostgreSQL container..."
	@docker-compose up -d
	@echo "Waiting for PostgreSQL to be ready..."
	@for i in $$(seq 1 30); do \
		docker exec pg-mock-time pg_isready -U postgres >/dev/null 2>&1 && echo "PostgreSQL is ready!" && break || \
		([ $$i -eq 30 ] && echo "PostgreSQL failed to start" && exit 1) || \
		(echo -n "." && sleep 1); \
	done

down:
	@echo "Stopping PostgreSQL container..."
	@docker-compose down

restart: down up

# Development helpers
shell:
	@docker exec -it pg-mock-time psql -U postgres

bash:
	@docker exec -it pg-mock-time bash

logs:
	@docker logs pg-mock-time --tail 50

logs-f:
	@docker logs -f pg-mock-time

# Check extension status
status:
	@docker exec pg-mock-time psql -U postgres -t -c "SELECT pg_mock_time_status();" 2>/dev/null || echo "Extension not installed or container not running"

# Clean up
clean:
	@echo "Cleaning up containers and volumes..."
	@docker-compose down -v

clean-all: clean
	@echo "Removing Docker image..."
	@docker rmi pg-mock-time-postgres 2>/dev/null || true

# Demo the extension
demo: up
	@./demo.sh