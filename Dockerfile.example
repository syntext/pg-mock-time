# Example Dockerfile showing how to include pg_mock_time extension in your own PostgreSQL Docker image

ARG PG_IMAGE=postgres:17.4
FROM ${PG_IMAGE} AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    postgresql-server-dev-all \
    git \
    && rm -rf /var/lib/apt/lists/*

# Clone and build the extension
RUN git clone https://github.com/syntext/pg-mock-time.git /tmp/pg-mock-time \
    && cd /tmp/pg-mock-time \
    && make -f Makefile \
    && make -f Makefile install-all

# Final stage
FROM ${PG_IMAGE}

# Stage built artifacts and install to runtime paths without relying on pg_config
RUN mkdir -p /tmp/pg_lib /tmp/pg_ext

COPY --from=builder /usr/lib/postgresql/*/lib/pg_mock_time* /tmp/pg_lib/
COPY --from=builder /usr/share/postgresql/*/extension/pg_mock_time* /tmp/pg_ext/

# Create init SQL to install the extension during initdb
RUN echo "CREATE EXTENSION IF NOT EXISTS pg_mock_time;" > /docker-entrypoint-initdb.d/01-pg-mock-time.sql

# Locate target directories dynamically and install
RUN set -eux; \
    libdir=$(find /usr/lib/postgresql -maxdepth 2 -type d -name lib | head -n1); \
    extdir=$(find /usr/share/postgresql -maxdepth 2 -type d -name extension | head -n1); \
    test -n "$libdir" && test -n "$extdir"; \
    cp /tmp/pg_lib/* "$libdir/"; \
    cp /tmp/pg_ext/* "$extdir/"; \
    # Provide a stable path for LD_PRELOAD
    cp "$libdir/pg_mock_time_simple.so" /usr/local/lib/pg_mock_time_simple.so; \
    rm -rf /tmp/pg_lib /tmp/pg_ext; \
    ls -la "$libdir"/pg_mock_time*; \
    ls -la "$extdir"/pg_mock_time*

# Set LD_PRELOAD for the postgres process by default
ENV LD_PRELOAD=/usr/local/lib/pg_mock_time_simple.so

WORKDIR /
